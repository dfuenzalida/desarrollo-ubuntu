// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace ContactsSharp {
    
    
    public partial class MainWindow {
        
        private Gtk.UIManager UIManager;
        
        private Gtk.Action FileAction;
        
        private Gtk.Action FileAction1;
        
        private Gtk.Action NewAction;
        
        private Gtk.Action SaveAction;
        
        private Gtk.Action ExitAction;
        
        private Gtk.Action EditAction;
        
        private Gtk.Action GoAction;
        
        private Gtk.Action AdelanteAction;
        
        private Gtk.Action PreviousAction;
        
        private Gtk.Action NextAction;
        
        private Gtk.Action CutAction;
        
        private Gtk.Action CopyAction;
        
        private Gtk.Action PasteAction;
        
        private Gtk.Action HelpAction;
        
        private Gtk.Action AboutAction;
        
        private Gtk.Action DeleteAction;
        
        private Gtk.Action HelpAction1;
        
        private Gtk.Action HelpAction2;
        
        private Gtk.VBox vbox1;
        
        private Gtk.MenuBar menubar1;
        
        private Gtk.Toolbar toolbar1;
        
        private Gtk.Table table1;
        
        private Gtk.Entry descrEntry;
        
        private Gtk.Label descrLabel;
        
        private Gtk.Entry emailEntry;
        
        private Gtk.Label emailLabel;
        
        private Gtk.Entry nameEntry;
        
        private Gtk.Label nameLabel;
        
        private Gtk.Statusbar statusbar1;
        
        private Gtk.Label modLabel;
        
        private Gtk.Label navLabel;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget ContactsSharp.MainWindow
            this.UIManager = new Gtk.UIManager();
            Gtk.ActionGroup w1 = new Gtk.ActionGroup("Default");
            this.FileAction = new Gtk.Action("FileAction", Mono.Unix.Catalog.GetString("_File"), null, null);
            this.FileAction.ShortLabel = Mono.Unix.Catalog.GetString("_File");
            w1.Add(this.FileAction, null);
            this.FileAction1 = new Gtk.Action("FileAction1", Mono.Unix.Catalog.GetString("_File"), null, null);
            this.FileAction1.ShortLabel = Mono.Unix.Catalog.GetString("_File");
            w1.Add(this.FileAction1, null);
            this.NewAction = new Gtk.Action("NewAction", Mono.Unix.Catalog.GetString("_New"), null, "gtk-new");
            this.NewAction.Sensitive = false;
            this.NewAction.ShortLabel = Mono.Unix.Catalog.GetString("_Nuevo");
            w1.Add(this.NewAction, null);
            this.SaveAction = new Gtk.Action("SaveAction", Mono.Unix.Catalog.GetString("_Save"), null, "gtk-save");
            this.SaveAction.ShortLabel = Mono.Unix.Catalog.GetString("_Guardar");
            w1.Add(this.SaveAction, null);
            this.ExitAction = new Gtk.Action("ExitAction", Mono.Unix.Catalog.GetString("_Exit"), null, "gtk-quit");
            this.ExitAction.ShortLabel = Mono.Unix.Catalog.GetString("_Salir");
            w1.Add(this.ExitAction, null);
            this.EditAction = new Gtk.Action("EditAction", Mono.Unix.Catalog.GetString("_Edit"), null, null);
            this.EditAction.ShortLabel = Mono.Unix.Catalog.GetString("_Edit");
            w1.Add(this.EditAction, null);
            this.GoAction = new Gtk.Action("GoAction", Mono.Unix.Catalog.GetString("_Go"), null, null);
            this.GoAction.ShortLabel = Mono.Unix.Catalog.GetString("_Go");
            w1.Add(this.GoAction, null);
            this.AdelanteAction = new Gtk.Action("AdelanteAction", Mono.Unix.Catalog.GetString("A_delante"), null, "gtk-go-back");
            this.AdelanteAction.ShortLabel = Mono.Unix.Catalog.GetString("A_delante");
            w1.Add(this.AdelanteAction, null);
            this.PreviousAction = new Gtk.Action("PreviousAction", Mono.Unix.Catalog.GetString("_Previous"), null, "gtk-go-back");
            this.PreviousAction.ShortLabel = Mono.Unix.Catalog.GetString("A_tr√°s");
            w1.Add(this.PreviousAction, "Page_Up");
            this.NextAction = new Gtk.Action("NextAction", Mono.Unix.Catalog.GetString("N_ext"), null, "gtk-go-forward");
            this.NextAction.ShortLabel = Mono.Unix.Catalog.GetString("A_delante");
            w1.Add(this.NextAction, "Page_Down");
            this.CutAction = new Gtk.Action("CutAction", Mono.Unix.Catalog.GetString("C_ut"), null, "gtk-cut");
            this.CutAction.ShortLabel = Mono.Unix.Catalog.GetString("Cor_tar");
            w1.Add(this.CutAction, null);
            this.CopyAction = new Gtk.Action("CopyAction", Mono.Unix.Catalog.GetString("_Copy"), null, "gtk-copy");
            this.CopyAction.ShortLabel = Mono.Unix.Catalog.GetString("_Copiar");
            w1.Add(this.CopyAction, null);
            this.PasteAction = new Gtk.Action("PasteAction", Mono.Unix.Catalog.GetString("_Paste"), null, "gtk-paste");
            this.PasteAction.Sensitive = false;
            this.PasteAction.ShortLabel = Mono.Unix.Catalog.GetString("_Pegar");
            w1.Add(this.PasteAction, null);
            this.HelpAction = new Gtk.Action("HelpAction", Mono.Unix.Catalog.GetString("Help"), null, null);
            this.HelpAction.ShortLabel = Mono.Unix.Catalog.GetString("Help");
            w1.Add(this.HelpAction, null);
            this.AboutAction = new Gtk.Action("AboutAction", Mono.Unix.Catalog.GetString("_About"), null, "gtk-about");
            this.AboutAction.ShortLabel = Mono.Unix.Catalog.GetString("Acerca _de");
            w1.Add(this.AboutAction, null);
            this.DeleteAction = new Gtk.Action("DeleteAction", Mono.Unix.Catalog.GetString("_Delete"), null, "gtk-delete");
            this.DeleteAction.ShortLabel = Mono.Unix.Catalog.GetString("_Borrar");
            w1.Add(this.DeleteAction, null);
            this.HelpAction1 = new Gtk.Action("HelpAction1", Mono.Unix.Catalog.GetString("_Help"), null, "gtk-help");
            this.HelpAction1.ShortLabel = Mono.Unix.Catalog.GetString("_Help");
            w1.Add(this.HelpAction1, "F1");
            this.HelpAction2 = new Gtk.Action("HelpAction2", Mono.Unix.Catalog.GetString("_Help"), null, "gtk-help");
            this.HelpAction2.ShortLabel = Mono.Unix.Catalog.GetString("_Help");
            w1.Add(this.HelpAction2, null);
            this.UIManager.InsertActionGroup(w1, 0);
            this.AddAccelGroup(this.UIManager.AccelGroup);
            this.Name = "ContactsSharp.MainWindow";
            this.Title = Mono.Unix.Catalog.GetString("Contacts Sharp");
            this.Icon = Stetic.IconLoader.LoadIcon(this, "stock_contact", Gtk.IconSize.Menu, 16);
            this.WindowPosition = ((Gtk.WindowPosition)(4));
            // Container child ContactsSharp.MainWindow.Gtk.Container+ContainerChild
            this.vbox1 = new Gtk.VBox();
            this.vbox1.Name = "vbox1";
            this.vbox1.Spacing = 6;
            // Container child vbox1.Gtk.Box+BoxChild
            this.UIManager.AddUiFromString("<ui><menubar name='menubar1'><menu name='FileAction1' action='FileAction1'><menuitem name='NewAction' action='NewAction'/><menuitem name='DeleteAction' action='DeleteAction'/><menuitem name='SaveAction' action='SaveAction'/><menuitem name='ExitAction' action='ExitAction'/></menu><menu name='EditAction' action='EditAction'><menuitem name='CutAction' action='CutAction'/><menuitem name='CopyAction' action='CopyAction'/><menuitem name='PasteAction' action='PasteAction'/></menu><menu name='GoAction' action='GoAction'><menuitem name='PreviousAction' action='PreviousAction'/><menuitem name='NextAction' action='NextAction'/></menu><menu name='HelpAction' action='HelpAction'><menuitem name='HelpAction2' action='HelpAction2'/><menuitem name='AboutAction' action='AboutAction'/></menu></menubar></ui>");
            this.menubar1 = ((Gtk.MenuBar)(this.UIManager.GetWidget("/menubar1")));
            this.menubar1.Name = "menubar1";
            this.vbox1.Add(this.menubar1);
            Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.vbox1[this.menubar1]));
            w2.Position = 0;
            w2.Expand = false;
            // Container child vbox1.Gtk.Box+BoxChild
            this.UIManager.AddUiFromString("<ui><toolbar name='toolbar1'><toolitem name='NewAction' action='NewAction'/><toolitem name='DeleteAction' action='DeleteAction'/><toolitem name='SaveAction' action='SaveAction'/><separator/><toolitem name='CutAction' action='CutAction'/><toolitem name='CopyAction' action='CopyAction'/><toolitem name='PasteAction' action='PasteAction'/><separator/><toolitem name='PreviousAction' action='PreviousAction'/><toolitem name='NextAction' action='NextAction'/></toolbar></ui>");
            this.toolbar1 = ((Gtk.Toolbar)(this.UIManager.GetWidget("/toolbar1")));
            this.toolbar1.Name = "toolbar1";
            this.toolbar1.ShowArrow = false;
            this.toolbar1.ToolbarStyle = ((Gtk.ToolbarStyle)(0));
            this.toolbar1.IconSize = ((Gtk.IconSize)(3));
            this.vbox1.Add(this.toolbar1);
            Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.vbox1[this.toolbar1]));
            w3.Position = 1;
            w3.Expand = false;
            w3.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            this.table1 = new Gtk.Table(((uint)(3)), ((uint)(2)), false);
            this.table1.Name = "table1";
            this.table1.RowSpacing = ((uint)(6));
            this.table1.ColumnSpacing = ((uint)(6));
            // Container child table1.Gtk.Table+TableChild
            this.descrEntry = new Gtk.Entry();
            this.descrEntry.CanFocus = true;
            this.descrEntry.Name = "descrEntry";
            this.descrEntry.IsEditable = true;
            this.descrEntry.InvisibleChar = '‚Ä¢';
            this.table1.Add(this.descrEntry);
            Gtk.Table.TableChild w4 = ((Gtk.Table.TableChild)(this.table1[this.descrEntry]));
            w4.TopAttach = ((uint)(2));
            w4.BottomAttach = ((uint)(3));
            w4.LeftAttach = ((uint)(1));
            w4.RightAttach = ((uint)(2));
            w4.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.descrLabel = new Gtk.Label();
            this.descrLabel.Name = "descrLabel";
            this.descrLabel.Xalign = 0F;
            this.descrLabel.LabelProp = Mono.Unix.Catalog.GetString("Description");
            this.table1.Add(this.descrLabel);
            Gtk.Table.TableChild w5 = ((Gtk.Table.TableChild)(this.table1[this.descrLabel]));
            w5.TopAttach = ((uint)(2));
            w5.BottomAttach = ((uint)(3));
            w5.XOptions = ((Gtk.AttachOptions)(4));
            w5.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.emailEntry = new Gtk.Entry();
            this.emailEntry.CanFocus = true;
            this.emailEntry.Name = "emailEntry";
            this.emailEntry.IsEditable = true;
            this.emailEntry.InvisibleChar = '‚Ä¢';
            this.table1.Add(this.emailEntry);
            Gtk.Table.TableChild w6 = ((Gtk.Table.TableChild)(this.table1[this.emailEntry]));
            w6.TopAttach = ((uint)(1));
            w6.BottomAttach = ((uint)(2));
            w6.LeftAttach = ((uint)(1));
            w6.RightAttach = ((uint)(2));
            w6.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.emailLabel = new Gtk.Label();
            this.emailLabel.Name = "emailLabel";
            this.emailLabel.Xalign = 0F;
            this.emailLabel.LabelProp = Mono.Unix.Catalog.GetString("EMail");
            this.table1.Add(this.emailLabel);
            Gtk.Table.TableChild w7 = ((Gtk.Table.TableChild)(this.table1[this.emailLabel]));
            w7.TopAttach = ((uint)(1));
            w7.BottomAttach = ((uint)(2));
            w7.XOptions = ((Gtk.AttachOptions)(4));
            w7.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.nameEntry = new Gtk.Entry();
            this.nameEntry.CanFocus = true;
            this.nameEntry.Name = "nameEntry";
            this.nameEntry.IsEditable = true;
            this.nameEntry.InvisibleChar = '‚Ä¢';
            this.table1.Add(this.nameEntry);
            Gtk.Table.TableChild w8 = ((Gtk.Table.TableChild)(this.table1[this.nameEntry]));
            w8.LeftAttach = ((uint)(1));
            w8.RightAttach = ((uint)(2));
            w8.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.nameLabel = new Gtk.Label();
            this.nameLabel.Name = "nameLabel";
            this.nameLabel.Xalign = 0F;
            this.nameLabel.LabelProp = Mono.Unix.Catalog.GetString("Name");
            this.table1.Add(this.nameLabel);
            Gtk.Table.TableChild w9 = ((Gtk.Table.TableChild)(this.table1[this.nameLabel]));
            w9.XOptions = ((Gtk.AttachOptions)(4));
            w9.YOptions = ((Gtk.AttachOptions)(4));
            this.vbox1.Add(this.table1);
            Gtk.Box.BoxChild w10 = ((Gtk.Box.BoxChild)(this.vbox1[this.table1]));
            w10.Position = 2;
            w10.Expand = false;
            w10.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            this.statusbar1 = new Gtk.Statusbar();
            this.statusbar1.Name = "statusbar1";
            this.statusbar1.Spacing = 6;
            // Container child statusbar1.Gtk.Box+BoxChild
            this.modLabel = new Gtk.Label();
            this.modLabel.Name = "modLabel";
            this.statusbar1.Add(this.modLabel);
            Gtk.Box.BoxChild w11 = ((Gtk.Box.BoxChild)(this.statusbar1[this.modLabel]));
            w11.Position = 1;
            w11.Expand = false;
            w11.Fill = false;
            // Container child statusbar1.Gtk.Box+BoxChild
            this.navLabel = new Gtk.Label();
            this.navLabel.Name = "navLabel";
            this.statusbar1.Add(this.navLabel);
            Gtk.Box.BoxChild w12 = ((Gtk.Box.BoxChild)(this.statusbar1[this.navLabel]));
            w12.Position = 2;
            w12.Expand = false;
            w12.Fill = false;
            this.vbox1.Add(this.statusbar1);
            Gtk.Box.BoxChild w13 = ((Gtk.Box.BoxChild)(this.vbox1[this.statusbar1]));
            w13.Position = 3;
            w13.Expand = false;
            w13.Fill = false;
            this.Add(this.vbox1);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.DefaultWidth = 465;
            this.DefaultHeight = 200;
            this.Show();
            this.DeleteEvent += new Gtk.DeleteEventHandler(this.OnDeleteEvent);
            this.NewAction.Activated += new System.EventHandler(this.OnNuevoActionActivated);
            this.SaveAction.Activated += new System.EventHandler(this.OnGuardarActionActivated);
            this.ExitAction.Activated += new System.EventHandler(this.OnSalirActionActivated);
            this.PreviousAction.Activated += new System.EventHandler(this.OnAtrsActionActivated);
            this.NextAction.Activated += new System.EventHandler(this.OnAdelanteAction1Activated);
            this.CutAction.Activated += new System.EventHandler(this.OnCortarActionActivated);
            this.CopyAction.Activated += new System.EventHandler(this.OnCopiarActionActivated);
            this.PasteAction.Activated += new System.EventHandler(this.OnPegarActionActivated);
            this.AboutAction.Activated += new System.EventHandler(this.OnAcercaDeActionActivated);
            this.DeleteAction.Activated += new System.EventHandler(this.OnDeleteActionActivated);
            this.HelpAction1.Activated += new System.EventHandler(this.OnHelpAction1Activated);
            this.HelpAction2.Activated += new System.EventHandler(this.OnHelpAction2Activated);
            this.nameEntry.KeyPressEvent += new Gtk.KeyPressEventHandler(this.OnNameEntryKeyPressEvent);
            this.nameEntry.EditingDone += new System.EventHandler(this.OnNameEntryEditingDone);
            this.nameEntry.FocusGrabbed += new System.EventHandler(this.OnNameEntryFocusGrabbed);
            this.nameEntry.KeyReleaseEvent += new Gtk.KeyReleaseEventHandler(this.OnNameEntryKeyReleaseEvent);
            this.emailEntry.KeyPressEvent += new Gtk.KeyPressEventHandler(this.OnEmailEntryKeyPressEvent);
            this.emailEntry.FocusGrabbed += new System.EventHandler(this.OnEmailEntryFocusGrabbed);
            this.emailEntry.EditingDone += new System.EventHandler(this.OnEmailEntryEditingDone);
            this.emailEntry.KeyReleaseEvent += new Gtk.KeyReleaseEventHandler(this.OnEmailEntryKeyReleaseEvent);
            this.descrEntry.KeyPressEvent += new Gtk.KeyPressEventHandler(this.OnDescrEntryKeyPressEvent);
            this.descrEntry.FocusGrabbed += new System.EventHandler(this.OnDescrEntryFocusGrabbed);
            this.descrEntry.EditingDone += new System.EventHandler(this.OnDescrEntryEditingDone);
            this.descrEntry.KeyReleaseEvent += new Gtk.KeyReleaseEventHandler(this.OnDescrEntryKeyReleaseEvent);
        }
    }
}
