// Generated by ThinG on 06-ene-2005 22:27:44.

package tests;
import thinlet.Thinlet;
import thinlet.FrameLauncher;

/**
 * A thinlet with the contents of "<code>thing.xml</code>".
 */
public class ThingHandler extends Thinlet
{

    /**
     * Create a new ThingHandler instance.
     */
    public ThingHandler() throws java.io.IOException
    {
        add(parse("thing.xml"));
    }


    /**
     * Callback handler.
     *
     * @param aButton a button.
     */
    public void addComponent(Object aButton)
    {
    }


    /**
     * Callback handler.
     */
    public void menu_edit_copy()
    {
    }


    /**
     * Callback handler.
     */
    public void menu_edit_cut()
    {
    }


    /**
     * Callback handler.
     */
    public void menu_edit_delete()
    {
    }


    /**
     * Callback handler.
     */
    public void menu_edit_paste()
    {
    }


    /**
     * Callback handler for the 'action' method of menuitem 'menu_edit_paste_systemcb'.
     */
    public void menu_edit_paste_systemcb()
    {
    }


    /**
     * Callback handler for the 'action' method of an unnamed menuitem.
     */
    public void menu_edit_settings()
    {
    }


    /**
     * Callback handler for the 'action' method of an unnamed menuitem.
     */
    public void menu_file_exit()
    {
    }


    /**
     * Callback handler for the 'action' method of an unnamed menuitem.
     */
    public void menu_file_new()
    {
    }


    /**
     * Callback handler for the 'action' method of an unnamed menuitem.
     */
    public void menu_file_open()
    {
    }


    /**
     * Callback handler for the 'action' method of an unnamed menuitem.
     */
    public void menu_file_reload()
    {
    }


    /**
     * Callback handler for the 'action' method of an unnamed menuitem.
     */
    public void menu_file_save()
    {
    }


    /**
     * Callback handler for the 'action' method of an unnamed menuitem.
     */
    public void menu_file_save_as()
    {
    }


    /**
     * Callback handler for the 'action' method of an unnamed menuitem.
     */
    public void menu_help_about()
    {
    }


    /**
     * Callback handler for the 'action' method of menuitem 'menu_tools_generate'.
     */
    public void menu_tools_generate()
    {
    }


    /**
     * Callback handler for the 'action' method of button 'tb_edit_movedown'.
     */
    public void moveComponentDown()
    {
    }


    /**
     * Callback handler for the 'action' method of button 'tb_edit_moveup'.
     */
    public void moveComponentUp()
    {
    }


    /**
     * Callback handler for the 'action' method of button 'propedit_reset'.
     */
    public void propEditReset()
    {
    }


    /**
     * Callback handler for the 'action' method of tabbedpane 'tabs'.
     *
     * @param tabsSelected the selected property of the tabbedpane named 'tabs'.
     */
    public void tabSelected(int tabsSelected)
    {
    }


    /**
     * Callback handler for the 'action' method of table 'props'.
     */
    public void tableSelectionChanged()
    {
    }


    /**
     * Callback handler for the 'action' method of tree 'tree'.
     */
    public void treeSelectionChanged()
    {
    }


    /**
     * Show a test frame with the Thinlet contents.
     *
     * @param args  ignored.
     */
    public static void main(String[] args) throws java.io.IOException
    {
        new FrameLauncher("ThingHandler", new ThingHandler(), 400, 400);
    }

}
